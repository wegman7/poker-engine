what do we want engine to be able to do?

Player
    Attributes:
        - seat_id
        - user
        - sitting_out
        - chips
        - chips_in_pot
        - time_bank
        - hole_cards

    Methods:
        Queue that is processed between hands
        - join (with chips)
        - leave
        - sitin/standup/addchips (make separate queue for between hands)

        Queue that is processed during hands
        - bet/call/check/fold

State
    Attributes
        - time_bank_total
        - players (dict user: player or seat_id: player)
        - spotlight (linked list of players still in hand)
        - spotlightBetweenHands (linked list of all players)
        - between_hands (bool)

Engine
    - queue game_action
    - process game_action
    - queue sit_action
    - process sit_action
    - start hand
    - post blinds
    - deal hand
    - rotate spotlight (this will handle triggering the next street, skipping players that are all in)
    - is hand over (is only one player left)
    - is street complete (called from rotate spotlight)
    - end street
    - deal flop
    - deal turn
    - deal river
    - payout
    - rank hands
    - end hand (move dealer chip etc)


    - should we add some sort of gameMessage when sending state to explain what's happening?
        - for example, something like "starting new hand", "two players to the flop", "player x won pot of $x with x hand"
    - start thinking about how often to send state and how to keep track of players time (frontend or backend or combo of both?)
    
    - start testing showdown/payout/sidepots






200 * 4 (p1, p2, p3, p4)
300 * 3 + 200 (p2, p3, p4)
400 * 2 + 500 (p3, p4)
1000 * 1 + 900 (p4)

p1 maxWin 800
p2 maxWin 1100
p3 maxWin 1300
p4 maxWin 1900
pot 1900